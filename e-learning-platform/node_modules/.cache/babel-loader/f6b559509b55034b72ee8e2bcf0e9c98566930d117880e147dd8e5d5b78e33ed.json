{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derick\\\\Desktop\\\\AIEP\\\\e-learning-platform\\\\src\\\\components\\\\chat\\\\Chatwindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n    const retries = 3; // Number of retries\n    let delay = 1000; // Initial delay in milliseconds\n\n    for (let attempt = 0; attempt < retries; attempt++) {\n      try {\n        const response = await fetch('http://localhost:5000/api/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: input\n          })\n        });\n        if (!response.ok) {\n          // Handle HTTP errors (e.g., 429, 500)\n          if (response.status === 429 && attempt < retries - 1) {\n            // If rate-limited, wait and retry\n            await new Promise(resolve => setTimeout(resolve, delay));\n            delay *= 2; // Exponential backoff\n            continue;\n          } else {\n            // If other errors or final retry, throw an error\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n        }\n        const data = await response.json();\n        if (data.error) {\n          // Handle API errors (e.g., rate limit exceeded)\n          throw new Error(data.error);\n        }\n\n        // If successful, add the assistant's response to messages\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: data.message\n        }]);\n        break; // Exit the retry loop on success\n      } catch (error) {\n        console.error('Chat Error:', error);\n        if (attempt === retries - 1) {\n          // If all retries fail, show an error message to the user\n          setMessages(prev => [...prev, {\n            role: 'assistant',\n            content: \"Sorry, I'm unable to respond at the moment. Please try again later.\"\n          }]);\n        }\n      } finally {\n        if (attempt === retries - 1) {\n          setIsTyping(false); // Stop typing indicator after final attempt\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-24 right-6 w-96 h-[500px] bg-white rounded-lg shadow-xl flex flex-col z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b flex justify-between items-center bg-indigo-600 text-white rounded-t-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: \"AI Learning Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"text-white hover:text-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-[80%] p-3 rounded-lg ${message.role === 'user' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-800'}`,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 p-3 rounded-lg\",\n          children: \"AI is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"p-4 border-t\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Ask anything...\",\n          className: \"flex-1 border rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"GIm8bEhSd+QxLCq5fkptu2//Ia4=\");\n_c = ChatWindow;\nexport default ChatWindow;\n\n//#AIEP\\e-learning-platform\\src\\components\\chat\\Chatwindow.js \nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatWindow","onClose","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","sendMessage","e","preventDefault","trim","userMessage","role","content","prev","retries","delay","attempt","response","fetch","method","headers","body","JSON","stringify","message","ok","status","Promise","resolve","setTimeout","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","map","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/derick/Desktop/AIEP/e-learning-platform/src/components/chat/Chatwindow.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nconst ChatWindow = ({ onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { role: 'user', content: input };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    const retries = 3; // Number of retries\r\n    let delay = 1000; // Initial delay in milliseconds\r\n\r\n    for (let attempt = 0; attempt < retries; attempt++) {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ message: input }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                // Handle HTTP errors (e.g., 429, 500)\r\n                if (response.status === 429 && attempt < retries - 1) {\r\n                    // If rate-limited, wait and retry\r\n                    await new Promise(resolve => setTimeout(resolve, delay));\r\n                    delay *= 2; // Exponential backoff\r\n                    continue;\r\n                } else {\r\n                    // If other errors or final retry, throw an error\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.error) {\r\n                // Handle API errors (e.g., rate limit exceeded)\r\n                throw new Error(data.error);\r\n            }\r\n\r\n            // If successful, add the assistant's response to messages\r\n            setMessages(prev => [...prev, { role: 'assistant', content: data.message }]);\r\n            break; // Exit the retry loop on success\r\n\r\n        } catch (error) {\r\n            console.error('Chat Error:', error);\r\n\r\n            if (attempt === retries - 1) {\r\n                // If all retries fail, show an error message to the user\r\n                setMessages(prev => [\r\n                    ...prev,\r\n                    { role: 'assistant', content: \"Sorry, I'm unable to respond at the moment. Please try again later.\" },\r\n                ]);\r\n            }\r\n        } finally {\r\n            if (attempt === retries - 1) {\r\n                setIsTyping(false); // Stop typing indicator after final attempt\r\n            }\r\n        }\r\n    }\r\n};\r\n  return (\r\n    <div className=\"fixed bottom-24 right-6 w-96 h-[500px] bg-white rounded-lg shadow-xl flex flex-col z-50\">\r\n      <div className=\"p-4 border-b flex justify-between items-center bg-indigo-600 text-white rounded-t-lg\">\r\n        <h3 className=\"font-semibold\">AI Learning Assistant</h3>\r\n        <button onClick={onClose} className=\"text-white hover:text-gray-200\">\r\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div\r\n              className={`max-w-[80%] p-3 rounded-lg ${\r\n                message.role === 'user'\r\n                  ? 'bg-indigo-600 text-white'\r\n                  : 'bg-gray-100 text-gray-800'\r\n              }`}\r\n            >\r\n              {message.content}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"flex justify-start\">\r\n            <div className=\"bg-gray-100 p-3 rounded-lg\">\r\n              AI is typing...\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={sendMessage} className=\"p-4 border-t\">\r\n        <div className=\"flex space-x-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Ask anything...\"\r\n            className=\"flex-1 border rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n\r\n//#AIEP\\e-learning-platform\\src\\components\\chat\\Chatwindow.js "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}